#include<Winsock2.h>#include<stdio.h>#include<iostream>#include<stdlib.h>#define DEFAULT_PORT 5051#define BUFFER_LENGTH 1024using namespace std;#pragma comment(lib,"ws2_32.lib")//#define _WINSOCK_DEPRECATED_NO_WARNINGS//3333void main(){ int iPort = DEFAULT_PORT;//,iPort1=DEFAULT_PORT+1; WSADATA wsaData; SOCKET sSocket, sSocket1; int iLen, iLen1; int iSend; int iRecv, iRecv1; char send_user[] = "王岑"; char recv_user[] = "应镕嵘"; char send_buf[BUFFER_LENGTH]; char recv_buf[BUFFER_LENGTH]; struct sockaddr_in ser, ser1, cli, cli1; printf("-------------------\n"); printf("Sever waiting\n"); printf("-------------------\n"); if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) {  printf("Failed to load winsock.\n");  return; } sSocket = socket(AF_INET, SOCK_DGRAM, 0); if (sSocket == INVALID_SOCKET) {  printf("socket() Failed:%d\n", WSAGetLastError());  return; } ser.sin_family = AF_INET; ser.sin_port = htons(iPort); ser.sin_addr.s_addr = htonl(INADDR_ANY); if (bind(sSocket, (LPSOCKADDR)&ser, sizeof(ser)) == SOCKET_ERROR) {  printf("bind()Failed:%d\n", WSAGetLastError());  return; } iLen = sizeof(cli); memset(recv_buf, 0, sizeof(recv_buf)); int flag = 0; while (1) {  //从客户端接收数据  iRecv = recvfrom(sSocket, recv_buf, BUFFER_LENGTH, 0, (SOCKADDR*)&cli, &iLen);  if (iRecv == SOCKET_ERROR)  {   printf("recvfrom()failed.:%d\n", WSAGetLastError());   break;  }  else if (iRecv == 0)   break;  else  {   if (strcmp(recv_buf + strlen(recv_buf) - 1, "#") == 0)   {    printf("关闭.\n"); flag++;   }   else   {    printf("%s\n", recv_buf);   }   if (flag == 2)    break;  } } closesocket(sSocket); WSACleanup();}
