#include<Winsock2.h>#include<stdio.h>#include<iostream>#include<stdlib.h>#define DEFAULT_PORT 5051#define BUFFER_LENGTH 1024using namespace std;#pragma comment(lib,"ws2_32.lib")void main(){ int iPort = DEFAULT_PORT; WSADATA wsaData; SOCKET sSocket; int iLen; int iSend; int iRecv; char send_user[] = "应镕嵘"; char recv_user[] = "王岑"; char send_buf[BUFFER_LENGTH]; char recv_buf[BUFFER_LENGTH]; struct sockaddr_in ser, cli; printf("-------------------\n"); printf("Sever waiting\n"); printf("-------------------\n"); if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) {  printf("Failed to load winsock.\n");  return; } sSocket = socket(AF_INET, SOCK_DGRAM, 0); if (sSocket == INVALID_SOCKET) {  printf("socket() Failed:%d\n", WSAGetLastError());  return; } ser.sin_family = AF_INET; ser.sin_port = htons(iPort); ser.sin_addr.s_addr = htonl(INADDR_ANY); if (bind(sSocket, (LPSOCKADDR)&ser, sizeof(ser)) == SOCKET_ERROR) {  printf("bind()Failed:%d\n", WSAGetLastError());  return; } iLen = sizeof(cli); memset(recv_buf, 0, sizeof(recv_buf)); // while (1) {  //从客户端接收数据  //while (1)  //{   iRecv = recvfrom(sSocket, recv_buf, BUFFER_LENGTH, 0, (SOCKADDR*)&cli, &iLen);   if (iRecv == SOCKET_ERROR)   {    printf("recvfrom()failed.:%d\n", WSAGetLastError());    break;   }   else if (iRecv == 0)    break;   else   {    if (strcmp(recv_buf, "#") == 0)    {     printf("关闭.\n"); break;    }    else     printf("%s: %s\n", recv_user, recv_buf);   }  //}    //给客户端发送数据  /*while (1)  {   cout << send_user << ": ";   cin >> send_buf;   iSend = sendto(sSocket, send_buf, sizeof(send_buf), 0, (SOCKADDR*)&cli, sizeof(cli));   if (iSend == SOCKET_ERROR)   {    printf("sendto() Failed.:%d\n", WSAGetLastError());    printf("-------------------\n");    break;   }   else if (iSend == 0)    break;   else   {    //printf("server sendto() succeeded!\n", iSend);    //printf("---------------\n");   }   if (strcmp(send_buf, "#") == 0)   {    printf("关闭.\n"); break;   }  }*/   } closesocket(sSocket); WSACleanup();}
